pipeline {
  agent any
  stages {

        stage('dostuff') {
          steps {
            withSonarQubeEnv(credentialsId: 'c9d3cafaced0a6afc8bb4d687753058265ba3ec4', installationName: 'blackjacksonar') {
              echo 'Hello1'
              echo 'Hello2'
              echo 'Hello3'

            }

          }
        }
        stage('Build') {
          when {
            branch 'main'
          }
          steps {
            withMaven() {
              sh 'mvn -f api1Reimb/pom.xml clean install'
              sh 'mvn -f api1Reimb/pom.xml clean package -DskipTests'
            }

          }
        }

        stage('Example Build') {
          steps {
            echo 'Hello, Maven'
            sh 'mvn --version'
          }
        }

        stage('Checkout') {
          steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'ghp', url: 'https://github.com/jschuwan/github']]])
          }
        }

        stage('Quality Gate1') {
                  steps {

                  dir('backup/User-Service/') {
                  script{
                    sh 'mvn clean verify sonar:sonar \
                    -Dsonar.projectKey=User-service \
                    -Dsonar.host.url=http://35.222.177.228:9000 \
                    -Dsonar.login=61072435882689d3d022fed333f1fe524f275ad0'
                  }
              }

            }

          }
       


    }
}
